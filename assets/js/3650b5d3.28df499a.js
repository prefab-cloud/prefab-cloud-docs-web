"use strict";(self.webpackChunkprefab_cloud_docs_web=self.webpackChunkprefab_cloud_docs_web||[]).push([[2243],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),f=a,h=u["".concat(s,".").concat(f)]||u[f]||d[f]||i;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1324:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={title:"How Client SDKs Work",sidebar_label:"Client SDKs",sidebar_position:2},o=void 0,l={unversionedId:"explanations/concepts/client-sdks",id:"explanations/concepts/client-sdks",title:"How Client SDKs Work",description:"Client Architecture",source:"@site/docs/explanations/concepts/client-sdks.md",sourceDirName:"explanations/concepts",slug:"/explanations/concepts/client-sdks",permalink:"/docs/explanations/concepts/client-sdks",draft:!1,editUrl:"https://github.com/prefab-cloud/prefab-cloud-docs-web/tree/main/docs/explanations/concepts/client-sdks.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"How Client SDKs Work",sidebar_label:"Client SDKs",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Server SDKs",permalink:"/docs/explanations/concepts/server-sdks"},next:{title:"Context",permalink:"/docs/explanations/concepts/context"}},s={},c=[{value:"Client Architecture",id:"client-architecture",level:2},{value:"Client Side Reliability",id:"client-side-reliability",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"client-architecture"},"Client Architecture"),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Client SDKs only receive Feature Flags and Dyanmic Log Levels. They do not receive Configs. This is to prevent leaking sensitive config information.")),(0,a.kt)("p",null,"The client architecture has different goals and different operating characteristics from the server side SDKs. The goals of the clients are:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Make lookups as fast as possible"),(0,a.kt)("li",{parentName:"ol"},"Don't leak raw configuration data to the end user"),(0,a.kt)("li",{parentName:"ol"},"Give clear and configurable behavior options if a connection cannot be made")),(0,a.kt)("p",null,"With those goals in mind, the architecture is:"),(0,a.kt)("mermaid",{value:'flowchart TB\n\n    subgraph Prefab\n        direction LR\n        API\n        CDN\n\n        GoogleSpanner[("Google Spanner")]\n    end\n\n    subgraph "Your JS app"\n        subgraph "Your Code"\n            setup\n            code["prefab.enabled?(my-flag)"]\n        end\n\n        subgraph "Prefab Client SDK"\n            init\n            ResultsCache["Cached evaluated flags for user"]\n            ResultsCache --\x3e code\n            code --\x3e ResultsCache\n        end\n    end\n\n    setup -- Context + API Key--\x3e init\n    init --\x3e CDN\n    CDN -.miss.-> API\n    API --update--\x3e CDN\n    CDN --\x3e ResultsCache\n    API --\x3e GoogleSpanner\n    GoogleSpanner --\x3e API'}),(0,a.kt)("p",null,"Clients will make a single request and receive the values of all evaluated Feature Flags for a given context."),(0,a.kt)("p",null,"Multiple requests only happen if you change the attributes of a context and re-initialize the client."),(0,a.kt)("p",null,"Note that ",(0,a.kt)("strong",{parentName:"p"},"evaluation happens server side")," . This helps prevent potentially sensitive data from leaking out of your system.\nThe client will be returned a list that is basically:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "feature.exp12-big-button": "control",\n  "feature.exp14-button-class": "very-blue",\n  "feature.risky-business": true\n}\n')),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"/docs/explanations/concepts/server-sdks"},"server SDKs")," to compare."),(0,a.kt)("h2",{id:"client-side-reliability"},"Client Side Reliability"),(0,a.kt)("p",null,"Each end-user that needs flags evaluated is a different request to Prefab. So what happens if Prefab goes down?"),(0,a.kt)("p",null,"First the good news. All active users will be unaffected, because they will have cached values in the CDN.\nIf you make a change to your feature flags, it won't be reflected, but in general logged-in users will have a consistent\nexperience."),(0,a.kt)("p",null,"The less good news. Evaluation happens server side, so if we don't have a server we won't have values. Without values, your ",(0,a.kt)("inlineCode",{parentName:"p"},"isEnabled")," checks will return ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,a.kt)("p",null,"The default timeout is ",(0,a.kt)("inlineCode",{parentName:"p"},"10 sec"),", but you can set this in client initialization."))}d.isMDXComponent=!0}}]);