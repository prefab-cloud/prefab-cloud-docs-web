"use strict";(self.webpackChunkprefab_cloud_docs_web=self.webpackChunkprefab_cloud_docs_web||[]).push([[751],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),c=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),f=c(n),d=r,g=f["".concat(u,".").concat(d)]||f[d]||p[d]||i;return n?a.createElement(g,l(l({ref:t},s),{},{components:n})):a.createElement(g,l({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=f;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1459:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={title:"Java SDK",sidebar_label:"Java SDK"},l=void 0,o={unversionedId:"java",id:"java",title:"Java SDK",description:"Getting Started With the Java SDK",source:"@site/docs/java.md",sourceDirName:".",slug:"/java",permalink:"/docs/java",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/java.md",tags:[],version:"current",frontMatter:{title:"Java SDK",sidebar_label:"Java SDK"},sidebar:"tutorialSidebar",previous:{title:"Tracking IDs",permalink:"/docs/ruby-sdk/tracking-ids"},next:{title:"JavaScript Client",permalink:"/docs/javascript"}},u={},c=[{value:"Getting Started With the Java SDK",id:"getting-started-with-the-java-sdk",level:2},{value:"Initialize Client",id:"initialize-client",level:2},{value:"Options",id:"options",level:3},{value:"Get FeatureFlag",id:"get-featureflag",level:2},{value:"Get Config",id:"get-config",level:2},{value:"Typical Usage",id:"typical-usage",level:2}],s={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"getting-started-with-the-java-sdk"},"Getting Started With the Java SDK"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>cloud.prefab</groupId>\n    <artifactId>prefab-cloud-java</artifactId>\n    <version>0.1.6</version>\n</dependency>\n")),(0,r.kt)("h2",{id:"initialize-client"},"Initialize Client"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"final PrefabCloudClient prefabCloudClient = new PrefabCloudClient(new Options());\n")),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Options options = new Options()\n  .setNamespace("billing-service.jobs.dunning-job")\n  .setConfigOverrideDir(System.getProperty("user.home"))\n  .setApikey(System.getenv("PREFAB_API_KEY"))\n  .setPrefabDatasource(Options.Datasources.ALL) // Option: Datasources.LOCAL_ONLY\n  .setOnInitializationFailure(Options.OnInitializationFailure.) // Option Options.OnInitializationFailure.UNLOCK\n  .setInitializationTimeoutSec(10);\n')),(0,r.kt)("h2",{id:"get-featureflag"},"Get FeatureFlag"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'  FeatureFlagClient featureFlagClient = prefabCloudClient.featureFlagClient();\n\n  featureFlagClient.featureIsOnFor(\n    "features.example-flag",\n    "123",\n    Map.of("customer-group", "beta")\n  );\n')),(0,r.kt)("h2",{id:"get-config"},"Get Config"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'final Optional<Prefab.ConfigValue> configValue = prefabCloudClient.configClient().get("the.key");\nif(configValue.isPresent()){\n  System.out.println(configValue.get().getString());\n}\n')),(0,r.kt)("h2",{id:"typical-usage"},"Typical Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Micronaut Factory\n@Factory\npublic class PrefabFactory {\n\n  @Singleton\n  public PrefabCloudClient prefabCloudClient() {\n    PrefabCloudClient.Options builder = new PrefabCloudClient.Options();\n    return new PrefabCloudClient(builder);\n  }\n\n  @Singleton\n  public FeatureFlagClient featureFlagClient(\n    PrefabCloudClient prefabCloudClient\n  ) {\n    return prefabCloudClient.featureFlagClient();\n  }\n\n  @Singleton\n  public ConfigClient configClient(PrefabCloudClient prefabCloudClient) {\n    return prefabCloudClient.configClient();\n  }\n}\n\n\npublic class MyClass {\n  @Inject\n  private ConfigClient configClient;\n  \n  public String test(String key){\n    Optional<Prefab.ConfigValue> val = configClient.get(key);\n    return "Live value of %s is %s".formatted(key, val.orElse("no value found"));\n  }\n}\n\n')))}p.isMDXComponent=!0}}]);