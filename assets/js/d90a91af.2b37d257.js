"use strict";(self.webpackChunkprefab_cloud_docs_web=self.webpackChunkprefab_cloud_docs_web||[]).push([[253],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||c[m]||l;return n?a.createElement(f,i(i({ref:t},p),{},{components:n})):a.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294),r=n(6010);const l="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(7462),r=n(7294),l=n(6010),i=n(2389),o=n(7392),s=n(7094),u=n(2466);const p="tabList__CuJ",c="tabItem_LNqP";function d(e){var t,n;const{lazy:i,block:d,defaultValue:m,values:f,groupId:b,className:v}=e,g=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=f?f:g.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),k=(0,o.l)(y,((e,t)=>e.value===t.value));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const h=null===m?m:null!=(t=null!=m?m:null==(n=g.find((e=>e.props.default)))?void 0:n.props.value)?t:g[0].props.value;if(null!==h&&!y.some((e=>e.value===h)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+h+'" but none of its children has the corresponding value. Available values are: '+y.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:T,setTabGroupChoices:N}=(0,s.U)(),[O,x]=(0,r.useState)(h),w=[],{blockElementScrollPositionUntilNextRender:C}=(0,u.o5)();if(null!=b){const e=T[b];null!=e&&e!==O&&y.some((t=>t.value===e))&&x(e)}const P=e=>{const t=e.currentTarget,n=w.indexOf(t),a=y[n].value;a!==O&&(C(t),x(a),null!=b&&N(b,String(a)))},j=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var a;const t=w.indexOf(e.currentTarget)+1;n=null!=(a=w[t])?a:w[0];break}case"ArrowLeft":{var r;const t=w.indexOf(e.currentTarget)-1;n=null!=(r=w[t])?r:w[w.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":d},v)},y.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,key:t,ref:e=>w.push(e),onKeyDown:j,onFocus:P,onClick:P},i,{className:(0,l.Z)("tabs__item",c,null==i?void 0:i.className,{"tabs__item--active":O===t})}),null!=n?n:t)}))),i?(0,r.cloneElement)(g.filter((e=>e.props.value===O))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==O})))))}function m(e){const t=(0,i.Z)();return r.createElement(d,(0,a.Z)({key:String(t)},e))}},2050:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>u,toc:()=>c});var a=n(7462),r=(n(7294),n(3905)),l=n(5488),i=n(5162);const o={title:"Testing",sidebar_label:"Testing",sidebar_position:5},s=void 0,u={unversionedId:"explanations/testing",id:"explanations/testing",title:"Testing",description:"Testing",source:"@site/docs/explanations/testing.md",sourceDirName:"explanations",slug:"/explanations/testing",permalink:"/docs/explanations/testing",draft:!1,editUrl:"https://github.com/prefab-cloud/prefab-cloud-docs-web/tree/main/docs/explanations/testing.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Testing",sidebar_label:"Testing",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Namespaces",permalink:"/docs/explanations/namespaces"},next:{title:"How Tos",permalink:"/docs/category/how-tos"}},p={},c=[{value:"Testing",id:"testing",level:2},{value:"Server-side SDKs",id:"server-side-sdks",level:3},{value:"Client-side Libraries",id:"client-side-libraries",level:3}],d={toc:c};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"testing"},"Testing"),(0,r.kt)("p",null,"Our SDKs and Clients have library and language-specific testing advice. We recommend you checkout the docs for the SDK or client you're using."),(0,r.kt)("p",null,"To keep your tests speedy and consistent, we recommend avoiding connections to our server and to instead prefer relying on local data for test setup.\nSpecifying a PrefabEnv of 'test' and putting data in ",(0,r.kt)("inlineCode",{parentName:"p"},".prefab.test.config.yaml")," is covered in ",(0,r.kt)("a",{parentName:"p",href:"/docs/explanations/defaults"},"Default Files"),"."),(0,r.kt)("h3",{id:"server-side-sdks"},"Server-side SDKs"),(0,r.kt)("p",null,"Specify ",(0,r.kt)("inlineCode",{parentName:"p"},"LOCAL_ONLY")," and use your ",(0,r.kt)("a",{parentName:"p",href:"/docs/explanations/bootstrapping"},"config.yaml file"),"."),(0,r.kt)(l.Z,{groupId:"lang",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"ruby",label:"Ruby",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"options = Prefab::Options.new(data_sources: LOCAL_ONLY)\n\nclient = Prefab::Client.initialize(options)\n")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/ruby-sdk/ruby#testing"},"Read the full Ruby testing docs."))),(0,r.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Options options = new Options()\n  .setPrefabDatasource(Options.Datasources.LOCAL_ONLY)\n")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/java-sdk/java#testing"},"Read the full Java testing docs."))),(0,r.kt)(i.Z,{value:"elixir",label:"Elixir",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elixir"},"options = Prefab.Options.new(prefab_datasources: :local_only)\n\nclient = Prefab.Client.new(options)\n")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/elixir-sdk/elixir#testing"},"Read the full Elixir testing docs.")))),(0,r.kt)("h3",{id:"client-side-libraries"},"Client-side Libraries"),(0,r.kt)("p",null,"Rather than talking to the server, use ",(0,r.kt)("inlineCode",{parentName:"p"},"setConfig")," or use a ",(0,r.kt)("inlineCode",{parentName:"p"},"Provider")," manually with your test setup."),(0,r.kt)(l.Z,{groupId:"lang",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"javascript",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("p",null,"Don't call ",(0,r.kt)("inlineCode",{parentName:"p"},"prefab.init"),". Instead, use ",(0,r.kt)("inlineCode",{parentName:"p"},"setConfig")," to set up your scenario."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"prefab.setConfig({\n  turbo: true,\n  defaultMediaCount: 3,\n});\n")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/javascript#testing"},"Read the full JavaScript testing docs."))),(0,r.kt)(i.Z,{value:"react",label:"React",mdxType:"TabItem"},(0,r.kt)("p",null,"Don't use the ",(0,r.kt)("inlineCode",{parentName:"p"},"PrefabProvider"),". Instead, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"PrefabTestProvider")," and pass in a config object."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"<PrefabTestProvider config={config}>\n  <MyComponent />\n</PrefabTestProvider>,\n")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/react#testing"},"Read the full React testing docs.")))))}m.isMDXComponent=!0}}]);