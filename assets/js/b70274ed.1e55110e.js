"use strict";(self.webpackChunkprefab_cloud_docs_web=self.webpackChunkprefab_cloud_docs_web||[]).push([[654],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),f=i,b=d["".concat(s,".").concat(f)]||d[f]||p[f]||r;return n?a.createElement(b,o(o({ref:t},c),{},{components:n})):a.createElement(b,o({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),i=n(6010);const r="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(r,o),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>f});var a=n(7462),i=n(7294),r=n(6010),o=n(2389),l=n(7392),s=n(7094),u=n(2466);const c="tabList__CuJ",p="tabItem_LNqP";function d(e){var t,n;const{lazy:o,block:d,defaultValue:f,values:b,groupId:m,className:g}=e,v=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=b?b:v.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),y=(0,l.l)(h,((e,t)=>e.value===t.value));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const k=null===f?f:null!=(t=null!=f?f:null==(n=v.find((e=>e.props.default)))?void 0:n.props.value)?t:v[0].props.value;if(null!==k&&!h.some((e=>e.value===k)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+h.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:O,setTabGroupChoices:N}=(0,s.U)(),[w,P]=(0,i.useState)(k),I=[],{blockElementScrollPositionUntilNextRender:T}=(0,u.o5)();if(null!=m){const e=O[m];null!=e&&e!==w&&h.some((t=>t.value===e))&&P(e)}const E=e=>{const t=e.currentTarget,n=I.indexOf(t),a=h[n].value;a!==w&&(T(t),P(a),null!=m&&N(m,String(a)))},C=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var a;const t=I.indexOf(e.currentTarget)+1;n=null!=(a=I[t])?a:I[0];break}case"ArrowLeft":{var i;const t=I.indexOf(e.currentTarget)-1;n=null!=(i=I[t])?i:I[I.length-1];break}}null==(t=n)||t.focus()};return i.createElement("div",{className:(0,r.Z)("tabs-container",c)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":d},g)},h.map((e=>{let{value:t,label:n,attributes:o}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>I.push(e),onKeyDown:C,onFocus:E,onClick:E},o,{className:(0,r.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":w===t})}),null!=n?n:t)}))),o?(0,i.cloneElement)(v.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function f(e){const t=(0,o.Z)();return i.createElement(d,(0,a.Z)({key:String(t)},e))}},8180:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>l,metadata:()=>u,toc:()=>p});var a=n(7462),i=(n(7294),n(3905)),r=n(5488),o=n(5162);const l={title:"Bootstrapping",sidebar_label:"Bootstrapping",sidebar_position:3},s=void 0,u={unversionedId:"explanations/bootstrapping",id:"explanations/bootstrapping",title:"Bootstrapping",description:"Config Load Order",source:"@site/docs/explanations/bootstrapping.md",sourceDirName:"explanations",slug:"/explanations/bootstrapping",permalink:"/docs/explanations/bootstrapping",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/explanations/bootstrapping.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Bootstrapping",sidebar_label:"Bootstrapping",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"SDK Reliability",permalink:"/docs/explanations/resiliency"},next:{title:"Default Files",permalink:"/docs/explanations/defaults"}},c={},p=[{value:"Config Load Order",id:"config-load-order",level:2},{value:"Reconfiguring Config File Locations",id:"reconfiguring-config-file-locations",level:3},{value:"SDK Startup",id:"sdk-startup",level:2},{value:"Dependency Injection Pattern",id:"dependency-injection-pattern",level:3},{value:"Singletons And Initializers",id:"singletons-and-initializers",level:3},{value:"On Initialization Failure",id:"on-initialization-failure",level:2}],d={toc:p};function f(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"config-load-order"},"Config Load Order"),(0,i.kt)("p",null,"On startup, config clients load config in the following order, with each level taking precedence over the previous:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/docs/explanations/defaults"},"Config File")," ",(0,i.kt)("inlineCode",{parentName:"li"},".prefab.default.config.yaml")," on the classpath"),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/docs/explanations/defaults#prefab-environments"},"Prefab Env")," files such as ",(0,i.kt)("inlineCode",{parentName:"li"},".prefab.staging.config.yaml"),", ",(0,i.kt)("inlineCode",{parentName:"li"},".prefab.test.config.yaml")," or ",(0,i.kt)("inlineCode",{parentName:"li"},".prefab.k8s.config.yaml")),(0,i.kt)("li",{parentName:"ol"},"Most current values from PrefabCloud APIs & CDNs as described in ",(0,i.kt)("a",{parentName:"li",href:"/docs/explanations/resiliency"},"resiliency")),(0,i.kt)("li",{parentName:"ol"},"Local Override File ",(0,i.kt)("inlineCode",{parentName:"li"},".prefab.overrides.config.yaml")," in the override directory (defaults to $HOME)"),(0,i.kt)("li",{parentName:"ol"},"Local Override Prefab Env Files ",(0,i.kt)("inlineCode",{parentName:"li"},".prefab.test.config.yaml")," in the override directory (defaults to $HOME)")),(0,i.kt)("h3",{id:"reconfiguring-config-file-locations"},"Reconfiguring Config File Locations"),(0,i.kt)("p",null,"The classpath config file location can be changed with the env var ",(0,i.kt)("inlineCode",{parentName:"p"},"PREFAB_CONFIG_CLASSPATH_DIR")),(0,i.kt)("p",null,"The local override config file location can be changed with env var ",(0,i.kt)("inlineCode",{parentName:"p"},"PREFAB_CONFIG_OVERRIDE_DIR")),(0,i.kt)("h2",{id:"sdk-startup"},"SDK Startup"),(0,i.kt)("p",null,"Your application begins to boot it will likely want to get configurations values from Prefab to do this, we need to make sure that it\nhas downloaded a current set of configuration. "),(0,i.kt)("h3",{id:"dependency-injection-pattern"},"Dependency Injection Pattern"),(0,i.kt)("p",null,"For languages where Dependency Injection is natural, initializing Prefab as a singleton and injecting it is the preferred approach. "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"@Singleton\n@Provides\npublic Prefab getClient(){\n    return new Prefab(PrefabOptions.Builder().build());\n}\n")),(0,i.kt)("h3",{id:"singletons-and-initializers"},"Singletons And Initializers"),(0,i.kt)("p",null,"In other languages, we should initialize prefab as early as possible in our application lifecycle. Methods called on the Prefab object will use\na singleton."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ruby"},"$prefab = Prefab.new # kicks off initialization\n$prefab.get('my.key') # uses a singleton\n")),(0,i.kt)("h2",{id:"on-initialization-failure"},"On Initialization Failure"),(0,i.kt)("p",null,"As we said in ",(0,i.kt)("a",{parentName:"p",href:"/docs/explanations/resiliency"},"resiliency")," Prefab goes to great lengths to ensure that you can get live data, but we need to specify behavior if\nyour application cannot connect. The internal configuration store begins in a locked state. It unlocks once it has live data. This gives us three choices\nif we are unable to get live data. "),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"We can raise an error. This is the default."),(0,i.kt)("li",{parentName:"ol"},"We can stay locked and keep trying. "),(0,i.kt)("li",{parentName:"ol"},"We can unlock and continue with default values read from our classpath files. This may be the right setting for your Test & CI environments.")),(0,i.kt)(r.Z,{groupId:"lang",mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"ruby",label:"Ruby",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ruby"},"options = Prefab::Options.new(\n  on_init_failure: Prefab::Options::ON_INITIALIZATION_FAILURE::RAISE,\n  initialization_timeout_sec: 30\n)\n$prefab = Prefab.initialize(options)\n"))),(0,i.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"@Singleton\n@Provides\npublic Prefab getClient(){\n    PrefabOptions options=new PrefabOptions.Builder();\n    options.setOnInitFailue(PrefabOptions.OnInitFailue.RAISE); // | UNLOCK_AND_CONTINUE | LOCK_AND_KEEP_TRYING\n    options.setInitializationTimeout(Duration.ofSeconds(30));\n    return new Prefab(options.build());\n}\n")))))}f.isMDXComponent=!0}}]);