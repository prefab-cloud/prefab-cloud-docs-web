"use strict";(self.webpackChunkprefab_cloud_docs_web=self.webpackChunkprefab_cloud_docs_web||[]).push([[407],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>b});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),d=r,b=p["".concat(s,".").concat(d)]||p[d]||m[d]||i;return n?a.createElement(b,o(o({ref:t},u),{},{components:n})):a.createElement(b,o({ref:t},u))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),r=n(6010);const i={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i.tabItem,o),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>k});var a=n(3117),r=n(7294),i=n(6010),o=n(2466),l=n(6775),s=n(1980),c=n(7392),u=n(12);function p(e){return function(e){var t,n;return null!=(t=null==(n=r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function m(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=null!=t?t:p(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:t,groupId:n});return[(0,s._X)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=m(e),[o,l]=(0,r.useState)((()=>function(e){var t;let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const r=null!=(t=a.find((e=>e.default)))?t:a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:i}))),[s,c]=b({queryString:n,groupId:a}),[p,f]=function(e){let{groupId:t}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(t),[a,i]=(0,u.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),g=(()=>{const e=null!=s?s:p;return d({value:e,tabValues:i})?e:null})();(0,r.useLayoutEffect)((()=>{g&&l(g)}),[g]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:i}))throw new Error("Can't select invalid tab value="+e);l(e),c(e),f(e)}),[c,f,i]),tabValues:i}}var g=n(2389);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.o5)(),m=e=>{const t=e.currentTarget,n=u.indexOf(t),a=c[n].value;a!==l&&(p(t),s(a))},d=e=>{var t;let n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{var a;const t=u.indexOf(e.currentTarget)+1;n=null!=(a=u[t])?a:u[0];break}case"ArrowLeft":{var r;const t=u.indexOf(e.currentTarget)-1;n=null!=(r=u[t])?r:u[u.length-1];break}}null==(t=n)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>u.push(e),onKeyDown:d,onClick:m},o,{className:(0,i.Z)("tabs__item",h.tabItem,null==o?void 0:o.className,{"tabs__item--active":l===t})}),null!=n?n:t)})))}function y(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=f(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",h.tabList)},r.createElement(v,(0,a.Z)({},e,t)),r.createElement(y,(0,a.Z)({},e,t)))}function k(e){const t=(0,g.Z)();return r.createElement(w,(0,a.Z)({key:String(t)},e))}},1589:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>b,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var a=n(3117),r=(n(7294),n(3905)),i=n(4866),o=n(5162);const l={title:"Namespaces",sidebar_label:"Namespaces",sidebar_position:4},s=void 0,c={unversionedId:"explanations/namespaces",id:"explanations/namespaces",title:"Namespaces",description:"Targetting Dynamic Configuration With Namespaces",source:"@site/docs/explanations/namespaces.md",sourceDirName:"explanations",slug:"/explanations/namespaces",permalink:"/docs/explanations/namespaces",draft:!1,editUrl:"https://github.com/prefab-cloud/prefab-cloud-docs-web/tree/main/docs/explanations/namespaces.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Namespaces",sidebar_label:"Namespaces",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Rules and Segmentation",permalink:"/docs/explanations/rules-and-segmentation"},next:{title:"Testing",permalink:"/docs/explanations/testing"}},u={},p=[{value:"Targetting Dynamic Configuration With Namespaces",id:"targetting-dynamic-configuration-with-namespaces",level:2}],m={toc:p},d="wrapper";function b(e){let{components:t,...l}=e;return(0,r.kt)(d,(0,a.Z)({},m,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"targetting-dynamic-configuration-with-namespaces"},"Targetting Dynamic Configuration With Namespaces"),(0,r.kt)("p",null,"Namespaces allow you to share config amongst many applications while still allowing you to override when necessary."),(0,r.kt)("p",null,"For instance, let's assume that all our code shares an HTTP library. We can configure the HTTP library to get its retry count & timeout duration from our config store.\nWe'll set ",(0,r.kt)("inlineCode",{parentName:"p"},"http.connection.retries")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"http.connection.timeout")," in the default namespace."),(0,r.kt)("p",null,"All of our apps should initialize their config store in a namespace. For instance our User Service may have clients in the namespaces:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'Prefab::Options.new(namespace: "userservice.web.app")')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'Prefab::Options.new(namespace: "userservice.daemon.sidekiq")')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'Prefab::Options.new(namespace: "userservice.cron.sync-to-billing")')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'Prefab::Options.new(namespace: "userservice.cron.cleanup-job")'))),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"It's likely that you have a good namespace already defined as a tag on your pod. Something like ",(0,r.kt)("inlineCode",{parentName:"p"},'namespace = (ENV[\'DEPLOYED_NAME\'] || "").gsub("-",".")')," may be just what you're looking for.")),(0,r.kt)("p",null,'Prefab config will find the "closest" matching config when the UserService goes to look for a value of ',(0,r.kt)("inlineCode",{parentName:"p"},"http.connection.timeout"),"."),(0,r.kt)("p",null,"Let's imagine that the UserService starts to go down because too many requests are timing out to a our billing service. We can quickly reduce the ",(0,r.kt)("inlineCode",{parentName:"p"},"http.connection.timeout")," for our ",(0,r.kt)("inlineCode",{parentName:"p"},"userservice.cron.sync-to-billing")," namespace and solve the issue without pushing code or restarting."),(0,r.kt)("p",null,"With the following values\n",(0,r.kt)("img",{alt:"namespaces for http-retries",src:n(3853).Z,width:"701",height:"306"})),(0,r.kt)(i.Z,{groupId:"lang",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"ruby",label:"Ruby",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},'# staging\nclient = Prefab::Client.new(Prefab::Options.new())\nclient.get("http.connection.retries") # returns 1\n\n# staging\nclient = Prefab::Client.new(Prefab::Options.new(namespace: "userservice.cron.sync-to-billing"))\nclient.get("http.connection.retries") # returns 1\n\n# production\nclient = Prefab::Client.new(Prefab::Options.new(namespace: "userservice.web.web"))\nclient.get("http.connection.retries") # returns 3\n\n# production\nclient = Prefab::Client.new(Prefab::Options.new(namespace: "userservice.cron.sync-to-billing"))\nclient.get("http.connection.retries") # returns 0\n\n'))),(0,r.kt)(o.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import prefab, { Identity } from '@prefab-cloud/prefab-cloud-js'\n\nconst options = { apiKey: 'YOUR_CLIENT_API_KEY', namespace: \"userservice.web.web\", identity: new Identity('user-1234', { device: 'desktop' }) };\nawait prefab.init(options);\n\nprefab.get(\"http.connection.retries\"); //returns 3 in production\n\n// Changing namespaces requires you to `init` again.\noptions.namespace = 'userservice.cron.sync-to-billing';\nawait prefab.init(options);\n\nprefab.get(\"http.connection.retries\");  //returns 0 in production\n"))),(0,r.kt)(o.Z,{value:"elixir",label:"Elixir",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elixir"},'# staging\nclient = Prefab.Client.new(Prefab.Options.new)\nPrefab.Client.get(client, "http.connection.retries") # => 1\n\n# staging\nclient = Prefab.Client.new(Prefab.Options.new(namespace: "userservice.cron.sync-to-billing"))\nPrefab.Client.get(client, "http.connection.retries") # => 1\n\n# production\nclient = Prefab.Client.new(Prefab.Options.new(namespace: "userservice.web.web"))\nPrefab.Client.get(client, "http.connection.retries") # => 3\n\n# production\nclient = Prefab.Client.new(Prefab.Options.new(namespace: "userservice.cron.sync-to-billing"))\nPrefab.Client.get(client, "http.connection.retries") # => 0\n\n')))))}b.isMDXComponent=!0},3853:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/namespace-retries-9ba98d250bcdce0f96498e03de16b08c.png"}}]);