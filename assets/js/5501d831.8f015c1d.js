"use strict";(self.webpackChunkprefab_cloud_docs_web=self.webpackChunkprefab_cloud_docs_web||[]).push([[6176],{5680:(e,n,a)=>{a.d(n,{xA:()=>u,yg:()=>g});var r=a(6540);function t(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){t(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,r,t=function(e,n){if(null==e)return{};var a,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var p=r.createContext({}),s=function(e){var n=r.useContext(p),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},u=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var a=e.components,t=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(a),f=t,g=d["".concat(p,".").concat(f)]||d[f]||c[f]||o;return a?r.createElement(g,l(l({ref:n},u),{},{components:a})):r.createElement(g,l({ref:n},u))}));function g(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=a.length,l=new Array(o);l[0]=f;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[d]="string"==typeof e?e:t,l[1]=i;for(var s=2;s<o;s++)l[s]=a[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}f.displayName="MDXCreateElement"},3088:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=a(8168),t=(a(6540),a(5680));const o={title:"CLI",sidebar_label:"CLI"},l="CLI",i={unversionedId:"tools/cli",id:"tools/cli",title:"CLI",description:"The Prefab CLI provides powerful tools for creating, modifying, and getting information about your configuration and flags.",source:"@site/docs/tools/cli.md",sourceDirName:"tools",slug:"/tools/cli",permalink:"/docs/tools/cli",draft:!1,editUrl:"https://github.com/prefab-cloud/prefab-cloud-docs-web/tree/main/docs/tools/cli.md",tags:[],version:"current",frontMatter:{title:"CLI",sidebar_label:"CLI"},sidebar:"tutorialSidebar",previous:{title:"Tools",permalink:"/docs/category/tools"},next:{title:"Editor Tools",permalink:"/docs/tools/editor-tools"}},p={},s=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Providing your API Key",id:"providing-your-api-key",level:3},{value:"change-default",id:"change-default",level:3},{value:"create",id:"create",level:3},{value:"download",id:"download",level:3},{value:"<code>get</code>",id:"get",level:3},{value:"Interpolating a value from Prefab",id:"interpolating-a-value-from-prefab",level:4},{value:"info",id:"info",level:3},{value:"list",id:"list",level:3},{value:"override",id:"override",level:3},{value:"serve",id:"serve",level:3}],u={toc:s},d="wrapper";function c(e){let{components:n,...a}=e;return(0,t.yg)(d,(0,r.A)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h1",{id:"cli"},"CLI"),(0,t.yg)("p",null,"The Prefab CLI provides powerful tools for creating, modifying, and getting information about your configuration and flags."),(0,t.yg)("h2",{id:"installation"},"Installation"),(0,t.yg)("p",null,"On a system with Node version 18+, run"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"npm install -g @prefab-cloud/prefab\n")),(0,t.yg)("h2",{id:"usage"},"Usage"),(0,t.yg)("p",null,"See ",(0,t.yg)("inlineCode",{parentName:"p"},"prefab --help")," for all the available commands. ",(0,t.yg)("inlineCode",{parentName:"p"},"prefab [COMMAND] --help")," will give you detailed information about a given command."),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"prefab")," is designed for humans first, but all commands support a ",(0,t.yg)("inlineCode",{parentName:"p"},"--json")," flag to output JSON instead."),(0,t.yg)("h3",{id:"providing-your-api-key"},"Providing your API Key"),(0,t.yg)("p",null,"You must export ",(0,t.yg)("inlineCode",{parentName:"p"},"PREFAB_API_KEY")," or provide your API key via the ",(0,t.yg)("inlineCode",{parentName:"p"},"--api-key=XYZ")," flag."),(0,t.yg)("details",null,(0,t.yg)("summary",null,"Using the 1password cli for your API key"),(0,t.yg)("p",null,"To use the ",(0,t.yg)("a",{parentName:"p",href:"https://developer.1password.com/docs/cli/get-started"},"1password cli")," for this, you can do the following (replace the ",(0,t.yg)("inlineCode",{parentName:"p"},"op://...")," with the secret reference for your API key)."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},'prefab --api-key=(op read "op://Private/Prefab API KEY/credential")\n'))),(0,t.yg)("h3",{id:"change-default"},"change-default"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"prefab change-default NAME")," allows you to change the default value for an environment. Any rules defined for that environment will still apply; only the default is changed."),(0,t.yg)("p",null,"This can be particularly helpful for flipping a flag on or off for everyone."),(0,t.yg)("p",null,"Example:"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"prefab change-default my.flag.name --value=true --environment=staging")),(0,t.yg)("h3",{id:"create"},"create"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"prefab create NAME")," creates a new flag or config in Prefab. You can use this to create basic values, encrypted secrets, or values provided by ENV vars."),(0,t.yg)("p",null,"Example: ",(0,t.yg)("inlineCode",{parentName:"p"},'prefab create my.new.string --type string --value="hello world" --secret')),(0,t.yg)("h3",{id:"download"},"download"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"prefab download")," will download a datafile for a given environment. ",(0,t.yg)("a",{parentName:"p",href:"/docs/explanations/concepts/testing"},"Datafiles")," are helpful for offline testing, CI, and running your own JS/React endpoint with the ",(0,t.yg)("a",{parentName:"p",href:"#serve"},(0,t.yg)("inlineCode",{parentName:"a"},"serve"))," command."),(0,t.yg)("p",null,"Example:"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"prefab download --environment=test")),(0,t.yg)("h3",{id:"get"},(0,t.yg)("inlineCode",{parentName:"h3"},"get")),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"prefab get NAME")," will give you the value for a config in the environment tied to your API key."),(0,t.yg)("p",null,"Example: ",(0,t.yg)("inlineCode",{parentName:"p"},"prefab get aws.bucket")),(0,t.yg)("h4",{id:"interpolating-a-value-from-prefab"},"Interpolating a value from Prefab"),(0,t.yg)("p",null,"Since the CLI is a well-behaved citizen of the command line, you can use it to compose other commands."),(0,t.yg)("p",null,"Here's an example command to download a file from s3 using the ",(0,t.yg)("a",{parentName:"p",href:"https://aws.amazon.com/cli/"},"aws cli"),". Prefab values are interpolated for the aws key and bucket name."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"aws s3api get-object \\\n  --bucket $(prefab get aws.bucket) \\\n  --key $(prefab get aws.db.backup.filename) \\\n  db.tgz\n")),(0,t.yg)("p",null,"As you'd expect, you can similarly use ",(0,t.yg)("inlineCode",{parentName:"p"},"prefab")," in a pipeline with ",(0,t.yg)("inlineCode",{parentName:"p"},"xargs")," and similar."),(0,t.yg)("h3",{id:"info"},"info"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"prefab info NAME")," will show details about an item in Prefab. Example output:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"prefab info aws.bucket\n\nhttps://app.cloud/account/projects/XYZ/configs/aws.bucket\n\n- Default: false\n- Staging: true\n- Production: [see rules] https://app.cloud/account/projects/XYZ/configs/aws.bucket?environment=588\n\nEvaluations over the last 24 hours:\n\nProduction: 34,789\n- 33% - false\n- 67% - true\n\nStaging: 17,138\n- 100% - true\n\nDevelopment: 7\n- 100% - false\n")),(0,t.yg)("h3",{id:"list"},"list"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"prefab list")," will show the names of items in your Prefab account. You can pass flags to filter this to only show items of a specific type (e.g. segments)."),(0,t.yg)("h3",{id:"override"},"override"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"prefab override")," lets you override the value for a config or feature flag for your prefab.cloud user. This is especially helpful for testing both sides of a feature flag."),(0,t.yg)("p",null,"Are you using a backend key for your server code and a frontend key for your UI? No problem; this override will apply to any environment using an API key created by your prefab.cloud user."),(0,t.yg)("p",null,"Example: ",(0,t.yg)("inlineCode",{parentName:"p"},"prefab override my.flag.name --value=true")),(0,t.yg)("h3",{id:"serve"},"serve"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"prefab serve")," will start a local server to serve up a local datafile that React and JS clients can talk to. See ",(0,t.yg)("inlineCode",{parentName:"p"},"prefab download")," for more."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"prefab serve prefab.test.588.config.json\nServer is listening on 3099. Press ctrl-c to stop.\n")),(0,t.yg)("p",null,"Example Dockerfile"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"FROM node:20\nWORKDIR /app\nRUN npm i -g @prefab-cloud/prefab\nCOPY prefab.Production.589.config.json /app\nENV PREFAB_LOCAL_ONLY=true\nEXPOSE 9898\nCMD prefab serve prefab.Production.589.config.json --port=9898\n")))}c.isMDXComponent=!0}}]);