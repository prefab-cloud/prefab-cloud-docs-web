"use strict";(self.webpackChunkprefab_cloud_docs_web=self.webpackChunkprefab_cloud_docs_web||[]).push([[628],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),f=a,h=u["".concat(s,".").concat(f)]||u[f]||d[f]||o;return n?r.createElement(h,l(l({ref:t},p),{},{components:n})):r.createElement(h,l({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5829:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={title:"How Server SDKs Work",sidebar_label:"Server SDKs",sidebar_position:1},l=void 0,i={unversionedId:"explanations/concepts/server-sdks",id:"explanations/concepts/server-sdks",title:"How Server SDKs Work",description:"SDK Architecture",source:"@site/docs/explanations/concepts/server-sdks.md",sourceDirName:"explanations/concepts",slug:"/explanations/concepts/server-sdks",permalink:"/docs/explanations/concepts/server-sdks",draft:!1,editUrl:"https://github.com/prefab-cloud/prefab-cloud-docs-web/tree/main/docs/explanations/concepts/server-sdks.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"How Server SDKs Work",sidebar_label:"Server SDKs",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Concepts",permalink:"/docs/category/concepts"},next:{title:"Client SDKs",permalink:"/docs/explanations/concepts/client-sdks"}},s={},c=[{value:"SDK Architecture",id:"sdk-architecture",level:2},{value:"Implementation",id:"implementation",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"sdk-architecture"},"SDK Architecture"),(0,a.kt)("p",null,"The Prefab server side SDK are all built with the 3 goals in mind:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Very fast lookups that do not require any remote calls."),(0,a.kt)("li",{parentName:"ol"},"Being highly resilient in the case of outages"),(0,a.kt)("li",{parentName:"ol"},"Near instant updates when changes are made")),(0,a.kt)("p",null,"The architecture to do this looks like this:"),(0,a.kt)("mermaid",{value:'flowchart RL\n    subgraph "Your Server"\n        subgraph "Your Code"\n            code[feature_flag.isEnabled?<br> my-flag, context]\n        end\n\n        subgraph "Prefab SDK"\n            Evaluation\n            ConfigCache\n        end\n\n        code --\x3e Evaluation\n    end\n\n\n    subgraph "Prefab API"\n        subgraph "API"\n            BulkAPI["Bulk API"]\n            StreamingAPI["Streaming API"]\n        end\n\n        subgraph "Datastores"\n            GoogleSpanner[("Google Spanner")]\n        end\n    end\n\n    BulkAPI --\x3e CDN\n    BulkAPI --\x3e ConfigCache\n    StreamingAPI --\x3e ConfigCache\n    Evaluation --\x3e code\n    ConfigCache --\x3e Evaluation\n    Evaluation --\x3e  ConfigCache\n    CDN --\x3e ConfigCache'}),(0,a.kt)("p",null,"Your code will instantiate a singleton of a Prefab Client. This client starts will fetch the latest configuration, trying\nmultiple sources in case of errors. Once it gets a connection it will unlock and be available for your code."),(0,a.kt)("p",null,"The client will also start a streaming connection to the APIs to pull down new changes."),(0,a.kt)("p",null,"Additionally, the SDK will poll for updates as a resiliency measure."),(0,a.kt)("p",null,"Note that the evaluation is always happening in-process in your application.\nFeature flags and config are stored in process so are lightning fast (no API calls when you access them)."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/explanations/concepts/client-sdks"},"See Client SDKs to compare")),(0,a.kt)("h2",{id:"implementation"},"Implementation"),(0,a.kt)("p",null,"When your client boots, it creates a local thread safe hashmap which will hold the config.\nThe general purpose Prefab config system will then push & pull changes down to your clients.\nThe expected latency is < 100 ms."),(0,a.kt)("p",null,"Feature flags are built on top of the Prefab config store so all reliability notes are applicable for Feature Flags as well."))}d.isMDXComponent=!0}}]);