"use strict";(self.webpackChunkprefab_cloud_docs_web=self.webpackChunkprefab_cloud_docs_web||[]).push([[5200],{3925:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var a=t(4848),r=t(8453);const i={title:"Your First Config and Flag",sidebar_label:"Your First Config and Flag",sidebar_position:2},s=void 0,o={id:"tutorials/first-config-and-flag",title:"Your First Config and Flag",description:"Your first config and flag",source:"@site/docs/tutorials/first-config-and-flag.md",sourceDirName:"tutorials",slug:"/tutorials/first-config-and-flag",permalink:"/docs/tutorials/first-config-and-flag",draft:!1,unlisted:!1,editUrl:"https://github.com/prefab-cloud/prefab-cloud-docs-web/tree/main/docs/tutorials/first-config-and-flag.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Your First Config and Flag",sidebar_label:"Your First Config and Flag",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Get Started",permalink:"/docs/tutorials/get-started"},next:{title:"Best Practices",permalink:"/docs/tutorials/best-practices"}},c={},d=[{value:"Your first config and flag",id:"your-first-config-and-flag",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"your-first-config-and-flag",children:"Your first config and flag"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:'config_key = "my-first-int-config"\nputs "#{config_key} is: #{Prefab.get(config_key)}"\n\nflag_name = "my-first-feature-flag"\nputs "#{flag_name} is: #{Prefab.enabled? flag_name}"\n'})}),"\n",(0,a.jsx)(n.p,{children:"Run these and you should see the following:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"my-first-int-config is: 30\nmy-first-feature-flag is: false\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Now create a config named ",(0,a.jsx)(n.code,{children:"my-first-int-config"})," in the Prefab UI. Set a default value to 50 and sync your change to the\nAPI."]}),"\n",(0,a.jsxs)(n.p,{children:["Add a feature flag named ",(0,a.jsx)(n.code,{children:"my-first-feature-flag"})," in the Prefab UI. Add boolean variants of ",(0,a.jsx)(n.code,{children:"true"})," and ",(0,a.jsx)(n.code,{children:"false"}),".\nSet the inactive variant to ",(0,a.jsx)(n.code,{children:"false"}),", make the flag active and add a rule of type ",(0,a.jsx)(n.code,{children:"ALWAYS_TRUE"})," with the variant to serve\nas ",(0,a.jsx)(n.code,{children:"true"}),".\nRemember to sync your change to the API."]}),"\n",(0,a.jsx)(n.p,{children:"Run your command again and you should see:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"my-first-int-config is: 50\nmy-first-feature-flag is: true\n"})}),"\n",(0,a.jsx)(n.p,{children:"Congrats! You're ready to rock!"})]})}function f(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var a=t(6540);const r={},i=a.createContext(r);function s(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);